name: ec2_sg

on:
  workflow_call:
    inputs:
      action_environment:
        required: false
        type: string
      ip_address:
        required: true
        type: string
      port:
        required: true
        type: string
      protocol:
        required: true
        type: string
      slack_channel_ids:
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AWS_EC2_SECURITY_GROUP_ID:
        required: true
      SLACK_BOT_TOKEN:
        required: false

env:
  ACTION_ENVIRONMENT: ${{ inputs.action_environment }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_EC2_SECURITY_GROUP_ID: ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }}
  AWS_EC2_SGR_IP_ADDRESS: ${{ inputs.ip_address }}
  AWS_EC2_SGR_PORT: ${{ inputs.port }}
  AWS_EC2_SGR_PROTOCOL: ${{ inputs.protocol }}
  GITHUB_ACTION_NAME: ec2_sg_whitelist_ip
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  SLACK_CHANNEL_IDS: ${{ inputs.slack_channel_ids }}

jobs:
  whitelist_ip:
    runs-on: ubuntu-latest
    steps:
      - name: Logging run context
        run: |
          echo "user: ${{ github.actor }},
          opening port: $AWS_EC2_SGR_PORT over protocol: $AWS_EC2_SGR_PROTOCOL for IP: $AWS_EC2_SGR_IP_ADDRESS"
      - name: Checking-out remote scripts
        uses: actions/checkout@v3
        with:
          repository: oshopgiri/deploy_actions
          ref: master
      - name: Setting-up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Whitelisting new IP
        run: ruby ./bin/ec2_sg_whitelist_ip.rb
      - name: Notify failure
        if: failure()
        run: ruby ./bin/slack_notify_failed_action.rb
